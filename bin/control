#!/bin/bash

STOPTIMEOUT=10
FMT="%a %b %d %Y %H:%M:%S GMT%z (%Z)"
PID=pid/redis.pid
if [ -n $REDIS_PASSWORD ]; then
    CLI_AUTH="-a $REDIS_PASSWORD"
fi
REDIS_CLI="-h $OPENSHIFT_REDIS_DB_HOST -p $OPENSHIFT_REDIS_DB_PORT $CLI_AUTH"

function is_running() {
    if [ -f $PID ]; then
        return 0
    fi
    return 1
}

function status() {
    if [ is_running ]; then
        client_result "Redis is running"
    else
        client_result "Redis is not running"
    fi
}

function start() {
    if (is_running); then
        exit 0
    fi

    echo $REDIS_CLI > env/REDIS_CLI
    erb conf/redis.conf.erb | redis-server -

    ret=$?
    if [ $ret -ne 0 ]; then
        echo "Redis failed to start - $ret" 1>&2
        exit $ret
    fi

    if [ -n "$REDIS_SENTINEL" ]; then
        erb conf/redis-sentinel.conf.erb | redis-server - --sentinel
        ret=$?
        if [ $ret -ne 0 ]; then
            echo "Redis Sentinel failed to start - $ret" 1>&2
            exit $ret
        fi
    fi
}

function stop() {
    if (is_running); then
        redis-cli $REDIS_CLI SHUTDOWN
        if [ $? -eq 0 ]; then
            exit 0
        fi
        exit 1
    fi
}

function restart() {
    if (stop); then
        start
    else
        start
    fi
}

function build() {
    echo
}

function post-deploy() {
    echo
}

function pre-build() {
    echo
}

function tidy() {
    echo
}

#
#  main():
#

# Ensure arguments.
if ! [ $# -eq 1 ]; then
    echo "Usage: $0 [start|restart|graceful|graceful-stop|stop|status]"
    exit 1
fi

# Source utility functions.
source $OPENSHIFT_CARTRIDGE_SDK_BASH

# Handle commands.
case "$1" in
    start)               start       ;;
    restart|graceful)    restart     ;;
    graceful-stop|stop)  stop        ;;
    status)              status      ;;
    build)               build       ;;
    pre-build)           pre-build   ;;
    post-deploy)         post-deploy ;;
    tidy)                tidy        ;;
    *) exit 0;
esac